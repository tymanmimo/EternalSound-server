"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parse_album_header = void 0;
const nav_js_1 = require("../nav.js");
const util_js_1 = require("../util.js");
const songs_js_1 = require("./songs.js");
const util_js_2 = require("./util.js");
function parse_album_header(response) {
    const header = (0, util_js_1.j)(response, nav_js_1.HEADER_DETAIL);
    const album_info = (0, songs_js_1.parse_song_runs)(header.subtitle.runs.slice(2));
    const album = {
        ...album_info,
        ...(0, util_js_2.get_menu_playlists)(header),
        title: (0, util_js_1.j)(header, nav_js_1.TITLE_TEXT),
        album_type: (0, util_js_1.j)(header, nav_js_1.SUBTITLE),
        thumbnails: (0, util_js_1.j)(header, nav_js_1.THUMBNAIL_CROPPED),
        isExplicit: (0, util_js_1.jo)(header, "subtitleBadges", nav_js_1.BADGE_PATH) != null,
        description: null,
        trackCount: null,
        duration: null,
        audioPlaylistId: null,
        likeStatus: null,
    };
    if ("description" in header) {
        album.description = header.description.runs[0].text;
    }
    if (header.secondSubtitle.runs.length > 1) {
        album.trackCount = header.secondSubtitle.runs[0].text;
        album.duration = header.secondSubtitle.runs[2].text;
    }
    else {
        album.duration = header.secondSubtitle.runs[0].text;
    }
    // add to library/uploaded
    const menu = (0, util_js_1.j)(header, nav_js_1.MENU);
    const toplevel = menu.topLevelButtons;
    album.audioPlaylistId =
        (0, util_js_1.jo)(toplevel, "0.buttonRenderer", nav_js_1.NAVIGATION_WATCH_PLAYLIST_ID) ??
            (0, util_js_1.jo)(toplevel, "0.buttonRenderer", nav_js_1.NAVIGATION_PLAYLIST_ID);
    const service = (0, util_js_1.jo)(toplevel, "1.toggleButtonRenderer.defaultServiceEndpoint");
    if (service) {
        album.likeStatus = (0, songs_js_1.parse_like_status)(service);
    }
    return album;
}
exports.parse_album_header = parse_album_header;
